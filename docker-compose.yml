version: '2'
services:

#  mongo:
#    image: mongo:4-bionic
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_INITDB_DATABASE=profiles
#    volumes:
#      - ./init/mongo:/docker-entrypoint-initdb.d

#  postgres:
#    image: postgres:11-alpine
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_PASSWORD: "vertx-in-action"
#    volumes:
#      - ./init/postgres:/docker-entrypoint-initdb.d/

  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.1.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 5005:5005
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 0

#  artemis:
#    image: vromero/activemq-artemis:2.13.0-alpine
#    ports:
#      - "5672:5672"

#  mailhog:
#    image: mailhog/mailhog:latest
#    ports:
#      - "1025:1025"
#      - "8025:8025"
