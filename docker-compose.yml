version: '2'
services:

#  mongo:
#    image: mongo:4-bionic
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_INITDB_DATABASE=profiles
#    volumes:
#      - ./init/mongo:/docker-entrypoint-initdb.d

#  postgres:
#    image: postgres:11-alpine
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_PASSWORD: "vertx-in-action"
#    volumes:
#      - ./init/postgres:/docker-entrypoint-initdb.d/

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    working_dir: /data
    volumes:
      - ./data:/data

  kafka-create-topics:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    depends_on:
      - kafka
    hostname: kafka-create-topics
    command: ["bash", "./create-topics.sh"]
    working_dir: /scripts
    volumes:
      - ./src/main/resources/scripts:/scripts

  kafkacat:
    image: edenhill/kafkacat:1.6.0
    depends_on:
      - kafka
    hostname: kafkacat

  processing:
    build:
      context: ./
      dockerfile: ./Dockerfile

#  artemis:
#    image: vromero/activemq-artemis:2.13.0-alpine
#    ports:
#      - "5672:5672"

#  mailhog:
#    image: mailhog/mailhog:latest
#    ports:
#      - "1025:1025"
#      - "8025:8025"
